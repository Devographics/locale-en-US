locale: en-US
translations:
  ###########################################################################
  # General
  ###########################################################################

  - key: general.results.description
    t: The 2024 edition of the annual survey about the latest trends in the JavaScript ecosystem.

  ###########################################################################
  # Survey Intro
  ###########################################################################

  # JS 2023
  - key: general.js2024.survey_intro
    t: >
      While we were busy trying to figure out which front-end library to bet on next, JavaScript itself has been going through an evolution of its own. 


      New TC39 proposals are making waves in the community, while others are already on the verge of being implemented in browsers everywhere. And TypeScript's popularity is making the prospect of native type support at some point in the future an actual possibility. 


      One thing's for certain – while the JavaScript of 2024 still feels familiar, there's no guarantee that we'll be able to say the same about the language we write five years from now.


      Until then, you can help chart our path by taking this year's State of JavaScript survey!

  ###########################################################################
  # Survey FAQ
  ###########################################################################

  - key: faq.how_long_will_survey_take_js2024
    t: How long will answering the survey take?
  - key: faq.how_long_will_survey_take_js2024.description
    t: >
      Depending on how many questions you answer (all questions can be skipped),
      filling out the survey should take around 15-20 minutes.

  - key: faq.survey_design_js2024
    t: How was this survey designed?
  - key: faq.survey_design_js2024.description
    t: >
      This survey was designed as the results of an [open design process](https://github.com/Devographics/surveys/issues/252) involving browser vendors and the web development community.

  - key: faq.results_released_js2024
    t: When will the results be released?
  - key: faq.results_released_js2024.description
    t: The survey will run from November 13 to December 3, 2024, and the survey results will be released shortly after.

  ###########################################################################
  # Introduction
  ###########################################################################

  - key: introduction.js2024
    t: |

      <span class="first-letter">I</span>t should be clear by now that, for better or for worse, JavaScript is not slowing down. 

      Between server components, server actions, signals, compilers, and more, we're seeing new innovations pop up faster than most of us can handle. 

      The trick to avoiding the dreaded JavaScript fatigue is remembering that you can pick your lane: sure, you can live life on the cutting edge with the early adopters; but you can also keep a slower pace and focus on stable, mature technologies – and eventually get to the new hotness once it's had a couple years to cool down. 

      Speaking of taking it slow, you might be wondering why these 2024 survey results are being released six months into *2024*. The truth is, between launching the new [State of HTML](https://2024.stateofhtml.com/) survey, innovating new question formats, collecting more freeform data than ever, and rewriting a lot of our data visualization codebase, we ended up with a workload that was probably a bit too ambitious, to say the least. 

      Hopefully the result of all this extra effort will be worth it though. And we do plan on much faster turnarounds going forward. 

      With all this out of the way, let's discover what JavaScript has been up to lately!

      <span class="conclusion__byline">– Sacha Greif</span>

  ###########################################################################
  # Tshirt
  ###########################################################################

  - key: sections.tshirt.title
    t: T-shirt

  - key: sections.tshirt.description
    t: |
      ## Support the Survey With the State of JavaScript T-Shirt

      Between the bad video quality, the bulky cassettes, and having to rewind, there's not much to miss about the VHS era. But one thing we *do* miss are the amazing 90s visuals that used to adorn blank VHS tapes. 

      But now, thanks to the talented Christopher Kirk-Nielsen you can enjoy all this retro radness while also celebrating your love for JavaScript at the same time!

  - key: tshirt.about
    t: About the T-shirt

  - key: tshirt.description
    t: |
      We use a high-quality, super-soft tri-blend shirt with a slim fit printed by our partners at Cotton Bureau.

  - key: tshirt.getit
    t: Get It

  - key: tshirt.price
    t: USD $32 + shipping

  - key: tshirt.designer.heading
    t: About the Designer

  - key: tshirt.designer.name
    t: Christopher Kirk-Nielsen

  - key: tshirt.designer.bio
    t: |
      Originally from France but now based in the United States, Chris is not just an amazing front-end developer, but also a talented illustrator who specializes in retro visuals. In fact, we encourage you to also check out his [other t-shirt designs](https://chriskirknielsen.com/designs)!

  ###########################################################################
  # Sections
  ###########################################################################

  - key: sections.user_info.description
    t: |
      This year, **23,540** respondents took part in the survey. And in order
      to help highlight different voices and surface deeper insights, we made a special
      effort to provide new ways to break our data down.

  - key: sections.features.description
    t: |
      This year we put special emphasis on identifying developer pain points with JavaScript. As one might expect, the **lack of native typing** and **browser inconsistencies** led their respective charts, each affecting nearly a third of developers.

  - key: sections.libraries.description
    t: |
      We reworked our charts to highlight not just developer experience, but *sentiment*. Be sure to explore these new grouping and sorting options to figure out which libraries get the most love… or the least!

  - key: sections.other_tools.description
    t: |
      While the JavaScript conversation often seems to boild down to which framework to pick, it's worth remembering that there's a whole galaxy of other tools, services, and platforms to explore beyond that!

  - key: sections.usage.description
    t: |
      Once again it seems like TypeScript has established itself as the default, at least among survey respondents. But apart from that, JavaScript usage remains as varied as ever!

  - key: sections.resources.description
    t: |
      Rather than provide predefined lists of options for survey respondents to pick from, we decided to simply offer raw text fields. This led to quite a few new entrants in this year's Resources section!

  - key: sections.awards.description
    t: |
      This year's awards were dominated by one very specific project… how quickly will you guess what it is?

  ###########################################################################
  # Charts
  ###########################################################################

  - key: options.features_categories.language
    aliasFor: sections.language.title
  - key: options.features_categories.browser_apis
    aliasFor: sections.browser_apis.title
  - key: options.features_categories.other_features
    aliasFor: sections.other_features.title

  ###########################################################################
  # Notes
  ###########################################################################

  - key: blocks.gender.note
    t: |
      If you're interested in learning more, we [wrote a blog post](https://dev.to/sachagreif/is-our-survey-biased-against-women-49oj) that addresses the survey's gender dynamics.

  - key: blocks.source.note
    t: >

      This chart aggregates a mix of referrers, URL parameters, and freeform answers. 

      - State of JS: the [State of JS](https://stateofjs.com) mailing list.

      - State of CSS: the State of CSS mailing list; also matches `email`, `by email`, etc.

      - Work: matches `work`, `colleagues`, `coworkers`, etc.

  ###########################################################################
  # Awards
  ###########################################################################

  - key: award.feature_adoption_delta_award.comment
    t: With a **{value}** progression in 2022, **top-level await** has quickly become an integral part of JavaScript.

  - key: award.tool_usage_delta_award.comment
    t: |
      **Vite** continues to be the fastest-growing library out there, with a **{value}** year-over-year increase in usage!

  - key: award.tool_satisfaction_award.comment
    t: Vite once again takes the top spot, with **{value}** of developers willing to use it again!

  - key: award.tool_interest_award.comment
    t: Did you guess Vite? Close, but this year **Vitest** is the technology developers are most interested in with a **{value}** interest ratio.

  - key: award.most_write_ins_award.comment
    t: With **{value}** mentions, **Bun** was the most mentioned technology overall in freeform questions.

  - key: award.most_commented_tool_award.comment
    t: With **{value}** comments, React showed that it's once again the most-discussed library around.

  - key: award.most_loved_tool_award.comment
    t: With **{value}** of all developers having a positive opinion of it, Vite concludes its sweep of these awards by being the most-loved technology around!

  ###########################################################################
  # Conclusion
  ###########################################################################

  - key: conclusion.js2024.cassidy_williams
    t: |
      <span class="first-line">Y'all, what a cool year to be on the internet.</span>

      There's so many interesting and exciting changes happening, and I've got my popcorn next to my keyboard, building and watching!

      The fact that so many "smaller" libraries like Preact, Solid, and htmx are climbing in positive sentiment over something massive like Next.js is fascinating. We're starting to see Angular make a bit of a comeback, and we'll see if that trend continues next year. We're seeing people fall out of love with some of the industry darlings. We're seeing very Rusty systems grow. Astro feels like it's off to the races in developer support.

      In terms of actual browser features, it almost feels like we're going too fast for the world to catch up. Which is not always a bad thing, necessarily! But I totally echo the sentiments that browser support is my primary concern over all the cool things coming out. 

      That being said, I'm personally loving using some of the new array features and the fact that more and more folks are supporting PWAs.

      Next year, let's improve the diversity of responses, get more people developing, and hopefully all of the new and exciting changes err on the side of fun, rather than intimidating! Thanks Sacha and team for including me here, and for running another awesome and valuable survey.

      See you online!

  - key: conclusion.js2024.cassidy_williams.bio
    t: Dev advocate, engineer, open sourcer, and memer

  - key: conclusion.js2024.theo_browne
    t: |
      <span class="first-line">Javascript is moving to the server, and we’re uneasy about it.</span>

      In last year’s survey, we saw quickly growing adoption of server-rendered frameworks like Next, Nuxt, Remix, and SvelteKit. This year, we shifted to server-first patterns such as Partial Hydration and Islands, which doubled in their adoption.

      Frame-, err, libraries like htmx show that web devs aren’t the only ones benefiting from utilizing the server. SPAs aren’t going anywhere (take a look at [Inertia](https://inertiajs.com/) for proof), but as these new patterns continue to improve, the market seems to be following along.

      This move has not been unanimously loved. React’s continued to grow, but React developers are increasingly concerned about its direction. Getting here has been… rough, but progress is being made every day.

      We’re also seeing more options appear outside of the React ecosystem. From [Nuxt](https://roe.dev/blog/nuxt-server-components) to [SolidStart](https://docs.solidjs.com/solid-start/reference/server/use-server) to [Astro](https://astro.build/blog/astro-480/#experimental-astro-actions), all of the best React Server Component features are rolling out to every developer.

      And of course, Vite has continued to dominate, and is the choice for app developers and framework authors alike. Hard to imagine where we’d be today without it!

  - key: conclusion.js2024.theo_browne.bio
    t: Creator of Ping, uploadthing, create-t3-app, and video creator

  ###########################################################################
  # Picks
  ###########################################################################

  - key: picks.my_pick
    t: "My 2024 Pick: "
  - key: picks.intro
    t: We asked members of the JavaScript community to share their “pick of the year”

  - key: picks.jack_herrington.name
    t: TanStack
  - key: picks.jack_herrington.bio
    t: Coder & YouTuber
  - key: picks.jack_herrington.description
    t: |
      Tanstack, a banquet of practical, high quality, battle tested libraries, culminating in the TanStack Start framework.

  - key: picks.josefine_schaefer.name
    t: Arisa Fukuzaki
  - key: picks.josefine_schaefer.bio
    t: Accessibility Engineer
  - key: picks.josefine_schaefer.description
    t: |
      Arisa is am amazing tech educator, mentor, docs & DevRel engineer who's super passionate about JS frameworks, community work and supporting women in tech. She's one to watch!

  - key: picks.cassie_evans.name
    t: gsap-video-export
  - key: picks.cassie_evans.bio
    t: Does a little bit of everything at GSAP
  - key: picks.cassie_evans.description
    t: |
      Chris made this super handy tool to export your GSAP animations to video. It's made my life much easier and my videos much smoother - no more low quality screen recordings for me!

  - key: picks.tania_rascia.name
    t: Cassidy Williams
  - key: picks.tania_rascia.bio
    t: Self-taught principal engineer, accomplished tech blogger, and professionally trained chef
  - key: picks.tania_rascia.description
    t: |
      Cassidy's been writing on her blog since 2009, has an incredibly unique style and so many cool, niche interests (I'm proud to own her StackOverflow copy/paste keyboard!). She puts out a great newsletter every week, makes the best developer memes, and does it all while being a new mom, which is beyond impressive.

  - key: picks.salma_alam_naylor.name
    t: The Breedling
  - key: picks.salma_alam_naylor.bio
    t: Live streamer, software engineer, and developer educator
  - key: picks.salma_alam_naylor.description
    t: |
      Web technology isn't just for websites. The Breedling is an in-browser visualisation tool to accompany live music gigs by the band of the same name, mixing video and RIVE animations with WebGL shaders, utilising an old BBC experimental library VideoContext.

  - key: picks.wes_bos.name
    t: Transformers.js
  - key: picks.wes_bos.bio
    t: Podcaster and educator
  - key: picks.wes_bos.description
    t: |
      Transformers.js is a library for working on AI models in JavaScript. It does it all - Computer vision, audio, image generation, chat-bot generation, and more.

      It works in the browser, via WASM or WebGPU, and on the server with Node.js, Bun or Deno. Running AI models on device is pretty exciting, and this library is a great way to get started without all the pain of trying to get Python running.

  - key: picks.shaundai_person.name
    t: Shruti Kapoor
  - key: picks.shaundai_person.bio
    t: Front end Senior Software Engineer (Netflix) and course instructor
  - key: picks.shaundai_person.description
    t: |
      My Pick of the Year is my friend Shruti Kapoor. Shruti has a way of explaining even the trickiest technical JS concepts in very easy-to-understand way.  In her fun and engaging YouTube videos and conference talks, she teaches her audience the most critical parts of JavaScript development without a lot of fluff.

  - key: picks.michelle_bakels.name
    t: v0
  - key: picks.michelle_bakels.bio
    t: Software developer, community builder, and React Miami organizer at G2i
  - key: picks.michelle_bakels.description
    t: |
      While AI coding companions are here to stay, they can still run into issues with keeping up with the latest developments in our ecosystem. v0 isn’t only the best tool for generating UI, but it also has the strongest context for providing valuable and relevant coding assistance in our current state of JavaScript.

  - key: picks.sacha_greif.name
    t: Bluesky
  - key: picks.sacha_greif.bio
    t: Maintainer, State of JS
  - key: picks.sacha_greif.description
    t: |
      With X's slow descent into madness, it felt like the front end community had been left without a home. So it's great to see so many of us finally converging towards a new platform in the form of Bluesky.

  # - key: picks.xxxx.name
  #   t:
  # - key: picks.xxxx.bio
  #   t:
  # - key: picks.xxxx.description
  #   t: |

  ###########################################################################
  # Sponsors
  ###########################################################################

  - key: sponsors.frontendmasters.description
    t: Advance your skills with in-depth, modern front-end engineering courses.
  - key: sponsors.google_chrome.description
    t: Thanks to the Google Chrome team for supporting our work.
  - key: sponsors.tokyodev.description
    t: Find your dream developer job in Japan today.
  - key: sponsors.renderatl.description
    t: The tech conference focused on all things web.

  ###########################################################################
  # FAQ/About
  ###########################################################################

  - key: about.content
    t: |
      The 2024 State of JavaScript survey ran from November 22 to December 12 2024, and collected 23,540 responses. The results were published on June 20, 2024. The survey is run by [Devographics](https://devographics.com/), a collective consisting of me ([Sacha Greif](https://sachagreif.com/)) and [Eric Burel](https://www.lbke.fr/), as well as invited experts and open-source contributors. 

      The State of JavaScript logo and t-shirt were designed by [Christopher Kirk-Nielsen](http://chriskirknielsen.com/).

      ### Survey Goals

      This survey was created to identify upcoming trends in the web development ecosystem in order to help developers make technological choices. 

      As such, the survey is focused on anticipating what's coming over the next few years rather than analyzing what's popular now, which is why features or technologies may sometimes be omitted even if they are currently widespread 

      It should also be taken as a **snapshot of a specific subset of developers**, and is not meant to speak for the entire ecosystem. 

      ### Survey Design

      The survey was designed in part based on last year's survey, with an open feedback period where the survey outline was discussed [on GitHub](https://github.com/Devographics/surveys/issues?q=is%3Aissue+is%3Aopen+label%3A%22State+of+JS+2024%22). 

      All survey questions were optional. 

      ### Survey Audience

      The survey was openly accessible online and respondents were not filtered or selected in any way. Respondents were primarily a mix of respondents from past surveys (alerted through a dedicated mailing list) and social media traffic. 

      Note that frameworks, libraries, etc. were free to encourage their audience to participate in the survey and some of them did take advantage of this via banners, tweets, etc. A detailed breakdown of traffic sources is included in the "Sources" chart. 

      ### Project Funding

      Funding from this project comes from a variety of sources:

      - **T-shirt sales**. 

      - **Sponsored links**: the links to recommended resources at the bottom of each page are provided by our partners [Frontend Masters](https://frontendmasters.com/) and [RenderATL](https://www.renderatl.com/).

      - **Direct Funding**: this year, [Google](https://www.google.com/) funded my work on the survey. 

      Any contribution or sponsorship is greatly appreciated. we would especially like to work closely with more browser vendors, since they play such a central role in the web ecosystem.  

      ### Technical Overview

      You can find a more in-depth technical overview of how the surveys are run [here](https://dev.to/sachagreif/how-the-devographics-surveys-are-run-2024-edition-1p6a).
