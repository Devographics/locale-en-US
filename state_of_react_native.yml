#########################################################################

# THIS DOESN'T LOAD FOR SOME REASON
# I've added these locales to common.yml instead

#########################################################################

locale: en-US
namespace: js
translations:
  - key: platform_apis.platform_apis_intro
    t: Welcome to the survey! TODO

  # - key: sections.react_native_app_aspects.title
  #   t: App aspects
  # - key: sections.react_native_app_aspects.description
  #   t: Solutions to well-defined problems in React Native app development.

  # - key: sections.react_native_specific_features.title
  #   t: Features
  # - key: sections.react_native_specific_features.description
  #   t: The features specific to React Native development.

  # - key: sections.tools.title
  #   t: Tools
  # - key: sections.tools.description
  #   t: The tools you use to develop React Native apps.

  # - key: sections.resources.title
  #   t: Resources
  # - key: sections.resources.description
  #   t: What resources do you use to learn about React Native?

  # - key: sections.opinions.title
  #   t: Opinions
  # - key: sections.opinions.description
  #   t: How do you feel about the state of React Native?

  # - key: sections.about_you.title
  #   t: About you
  # - key: sections.about_you.description
  #   t: Let's get to know you a little better.

  # - key: sections.developer_background.title
  #   t: Background
  # - key: sections.developer_background.description
  #   t: What's your background as a developer?

  # - key: options.yes_or_no.yes
  #   t: Yes
  # - key: options.yes_or_no.no
  #   t: No

  # - key: options.platform_api_awareness.option1
  #   t: I have never heard / I am not sure what it is
  # - key: options.platform_api_awareness.option2
  #   t: I know what it is, but have never used it in React Native app
  # - key: options.platform_api_awareness.option3
  #   t: I wanted to use it, but React Native doesn't support it
  # - key: options.platform_api_awareness.option4
  #   t: I have used in React Native using an off-the-shelf API/library
  # - key: options.platform_api_awareness.option5
  #   t: I used in React Native by writing my own module

  # # slider
  # - key: options.slider.0
  #   t: 100% JS
  # - key: options.slider.4
  #   t: 50%-50%
  # - key: options.slider.8
  #   t: 100% TS

  - key: introduction.rn2022
    t: |
      <span class="first-letter">O</span>nce in a while a React Native developer is challenged with making a project-wide decision about what solution to use in the project. A few months ago, I found myself in this situation, trying to decide on the best styling technique for my React Native app. I did an extensive research, gathering information about all available options, reading opinions and articles, but I still wasn't sure what to choose. I realised I was missing a single, centralized comparison of all these options, similar to what's available in the State of JS, but tailored specifically for the React Native ecosystem.

      This led to the creation of State of React Native. I consulted the idea with [Sacha Greif](https://sachagreif.com) from the [Devographics team](https://www.devographics.com) (creator of State of JS), assembled a team of talented colleagues, and after many work hours and gathering almost 2500 responses from the community, we are proud to present the results of the first State of React Native survey.

      I hope that this first edition sets the tone for an annual tradition and that the results provide you with a comprehensive overview of the current state of React Native, helping you make informed decisions for your current and future React Native projects. - Bartłomiej Bukowski

  - key: conclusion.rn2022
    t: |
      The React Native ecosystem is thriving and becoming better with each new version released. The community is very active and innovative solutions to various challenges faced by programmers are emerging.

      This survey showcases the diversity and versatility of the React Native ecosystem by covering various aspects of app development and solutions. My own styling problem was solved by the wonderful [NativeWind](https://www.nativewind.dev) library, which provides great control over styles and a great developer experience. This is just one example of how React Native is benefiting from the web React and JavaScript ecosystems to increase its quality and popularity.

      Despite this, there are still some challenges that need to be addressed in the React Native framework. However, the core team members and open source contributors are working tirelessly to fix these issues, making the future of React Native even brighter.

      In 2023, we can expect to see even more performant React Native apps that are indistinguishable from apps written using native technologies.

      P.S. if you're still hungry for more React and JavaScript stats I highly recommend checking out the yearly State of JS survey and Rising Stars ranking from Best Of JS.

  - key: conclusion.rn2022.bio
    t: Software Engineer at Software Mansion

  - key: about.content
    t: >
      The 2021 State of JS survey ran from January 13 to February 2 **2022**, and collected 16,085 responses. The survey is run by me, [Sacha Greif](https://sachagreif.com/), with help from a team of open-source contributors and consultants. 

      This year's logo and t-shirt were designed by [Christopher Kirk-Nielsen](http://chriskirknielsen.com/).

      ### Survey Goals

      This survey, along with the [State of CSS](https://stateofcss.com/) survey, was created to identify upcoming trends in the web development ecosystem in order to help developers make technological choices. 

      As such, these surveys are focused on anticipating what's coming over the next few years rather than analyzing what's popular now, which is why the features or technologies that are currently most widespread are not always included. 

      They should also be taken as a **snapshot of a specific subset of developers**, and are not meant to speak for the entire ecosystem. 

      ### Survey Design

      The survey was designed in part based on last year's survey, with an open feedback period where the survey outline was discussed [on GitHub](https://github.com/StateOfJS/Monorepo/issues/56). 

      All survey questions were optional. 

      ### Survey Audience

      The survey was openly accessible online and respondents were not filtered or selected in any way. Respondents were primarily a mix of respondents from past surveys (alerted through a dedicated mailing list) and social media traffic. 

      Note that frameworks, libraries, etc. were free to encourage their audience to participate in the survey and some of them did take advantage of this via banners, tweets, etc. A detailed breakdown of traffic sources is included in the "Sources" chart. 

      ### Representativeness & Inclusivity

      While we believe it's important to give a voice to every community, the reality is that an open survey like this one will always struggle to properly represent everybody, especially when operating through systems that already carry their own inherent biases. 


      In order to counter-balance this, we are implementing three distinct strategies:


      - **Outreach**: we always try to reach out to different organizations (such as BIPOC- or LGBTQ-focused organizations, or online teaching platforms) to try and diversify our own audience. 

      - **Data Analysis**: through features like facets and variants, we're always trying to make it easier to surface the voices of any demographic segment, no matter how minoritized it might be in our data. 

      - **Barrier Lowering**: making the survey too long, inaccessible, slow to load, English-only, etc. can all contribute to imposing an "effort tax" that cuts off the parts of the community that can't afford to pay it. Fixing these issues can lower the barrier to entry and in the process make our audience more diverse. 

      ### Project Funding

      Funding from this project comes from a variety of sources:


      - **T-shirt sales**. 

      - **Chart Sponsorships**: members of the community can donate to the survey in exchange for having their name featured in the report.  

      - **Sponsored links**: the links to recommended resources at the bottom of each page are provided by our partner [Frontend Masters](https://frontendmasters.com/).

      - **Other Funding**: this year, the [Google Chrome](https://www.google.com/chrome/) team set aside a small budget to help hire an [accessibility consultant](https://fossheim.io/) to work on the CSS and JS surveys.


      Despite these funding sources, the surveys remains mostly a self-funded project overall and any contribution or sponsorship would be greatly appreciated. I would especially like to work closely with more browser vendors, since they play such a central role in the web ecosystem.  

      ### Technical Overview

      You can find a more in-depth technical overview of how the surveys are run [here](https://dev.to/sachagreif/how-the-state-of-js-css-surveys-are-run-4lnb).

      - **Data collection**: custom [Vulcan.js](http://vulcanjs.org/) app.

      - **Data storage/processing**: MongoDB & MongoDB Aggregations.

      - **Data API**: Node.js GraphQL API. 

      - **Results Site**: [Gatsby](https://www.gatsbyjs.com/) React app.

      - **Data Visualizations**: [Nivo](https://nivo.rocks/) React dataviz library. 

      - **Type**: [IBM Plex Mono](https://fonts.google.com/specimen/IBM+Plex+Mono) and [Bebas Neue](https://fonts.google.com/specimen/Bebas+Neue).

  - key: options.about_you_age.about_you_age_18_or_youger
    t: 18 years old or under
  - key: options.about_you_age.about_you_age_19_24
    t: 19-24 years old
  - key: options.about_you_age.about_you_age_25_34
    t: 25-34 years old
  - key: options.about_you_age.about_you_age_35_44
    t: 35-44 years old
  - key: options.about_you_age.about_you_age_45_54
    t: 45-54 years old
  - key: options.about_you_age.about_you_age_55_64
    t: 55-64 years old
  - key: options.about_you_age.about_you_age_65_or_older
    t: 65 or more years old

  - key: options.about_you_age.about_you_age_18_or_youger.short
    t: <= 10
  - key: options.about_you_age.about_you_age_19_24.short
    t: 11-18
  - key: options.about_you_age.about_you_age_25_34.short
    t: 19-24
  - key: options.about_you_age.about_you_age_35_44.short
    t: 25-34
  - key: options.about_you_age.about_you_age_45_54.short
    t: 35-44
  - key: options.about_you_age.about_you_age_55_64.short
    t: 55-64
  - key: options.about_you_age.about_you_age_65_or_older.short
    t: ">65"

  - key: options.about_you_company_size.about_you_company_size_1_employee
    t: 1 employee
  - key: options.about_you_company_size.about_you_company_size_2_to_5
    t: 2-5 employees
  - key: options.about_you_company_size.about_you_company_size_6_to_10
    t: 6-10 employees
  - key: options.about_you_company_size.about_you_company_size_11_to_20
    t: 11-20 employees
  - key: options.about_you_company_size.about_you_company_size_21_to_50
    t: 21-50 employees
  - key: options.about_you_company_size.about_you_company_size_51_to_100
    t: 51-100 employees
  - key: options.about_you_company_size.about_you_company_size_101_to_500
    t: 101-500 employees
  - key: options.about_you_company_size.about_you_company_size_501_to_1000
    t: 501-1000 employees
  - key: options.about_you_company_size.about_you_company_size_1000_or_more
    t: 1000 or more employees

  - key: options.about_you_company_size.about_you_company_size_1_employee.short
    t: 1
  - key: options.about_you_company_size.about_you_company_size_2_to_5.short
    t: 2-5
  - key: options.about_you_company_size.about_you_company_size_6_to_10.short
    t: 6-10
  - key: options.about_you_company_size.about_you_company_size_11_to_20.short
    t: 11-20
  - key: options.about_you_company_size.about_you_company_size_21_to_50.short
    t: 21-50
  - key: options.about_you_company_size.about_you_company_size_51_to_100.short
    t: 51-100
  - key: options.about_you_company_size.about_you_company_size_101_to_500.short
    t: 101-500
  - key: options.about_you_company_size.about_you_company_size_501_to_1000.short
    t: 501-1000
  - key: options.about_you_company_size.about_you_company_size_1000_or_more.short
    t: 1000+

  - key: options.about_you_education_degree.about_you_education_degree_no
    t: no degree
  - key: options.about_you_education_degree.about_you_education_degree_yes_related
    t: yes, related
  - key: options.about_you_education_degree.about_you_education_degree_yes_unrelated
    t: yes, unrelated

  - key: options.about_you_education_degree.about_you_education_degree_no.short
    t: no
  - key: options.about_you_education_degree.about_you_education_degree_yes_related.short
    t: related
  - key: options.about_you_education_degree.about_you_education_degree_yes_unrelated.short
    t: unrelated

  - key: options.about_you_experience_in_rn.about_you_experience_in_rn_1_year_or_less
    t: 1 year or less
  - key: options.about_you_experience_in_rn.about_you_experience_in_rn_2_to_3_years
    t: 2-3 years
  - key: options.about_you_experience_in_rn.about_you_experience_in_rn_4_to_5_years
    t: 4-5 years
  - key: options.about_you_experience_in_rn.about_you_experience_in_rn_6_years_or_more
    t: 6 or more years

  - key: options.about_you_experience_in_rn.about_you_experience_in_rn_1_year_or_less.short
    t: <= 1
  - key: options.about_you_experience_in_rn.about_you_experience_in_rn_2_to_3_years.short
    t: 2-3 years
  - key: options.about_you_experience_in_rn.about_you_experience_in_rn_4_to_5_years.short
    t: 4-5 years
  - key: options.about_you_experience_in_rn.about_you_experience_in_rn_6_years_or_more.short
    t: 6 or more years

  - key: options.about_you_experience.about_you_experience_1_year_or_less
    t: 1 year or less
  - key: options.about_you_experience.about_you_experience_2_to_3_years
    t: 2-3 years
  - key: options.about_you_experience.about_you_experience_4_to_5_years
    t: 4-5 years
  - key: options.about_you_experience.about_you_experience_6_to_10_years
    t: 6-10 years
  - key: options.about_you_experience.about_you_experience_11_to_20_years
    t: 11-20 years
  - key: options.about_you_experience.about_you_experience_20_years_or_more
    t: 20 or more years

  - key: options.about_you_experience.about_you_experience_1_year_or_less.short
    t: <= 1
  - key: options.about_you_experience.about_you_experience_2_to_3_years.short
    t: 2-3
  - key: options.about_you_experience.about_you_experience_4_to_5_years.short
    t: 4-5
  - key: options.about_you_experience.about_you_experience_6_to_10_years.short
    t: 6-10
  - key: options.about_you_experience.about_you_experience_11_to_20_years.short
    t: 11-20
  - key: options.about_you_experience.about_you_experience_20_years_or_more.short
    t: 20+

  - key: options.about_you_gender.about_you_gender_female
    t: female
  - key: options.about_you_gender.about_you_gender_male
    t: male
  - key: options.about_you_gender.about_you_gender_non_binary
    t: non-binary
  - key: options.about_you_gender.about_you_gender_not_listed
    t: not listed

  - key: options.about_you_gender.about_you_gender_female.short
    t: F
  - key: options.about_you_gender.about_you_gender_male.short
    t: M
  - key: options.about_you_gender.about_you_gender_non_binary.short
    t: NB
  - key: options.about_you_gender.about_you_gender_not_listed.short
    t: NL

  - key: options.about_you_salary.about_you_salary_free
    t: free
  - key: options.about_you_salary.about_you_salary_0_to_10k
    t: 0-10k
  - key: options.about_you_salary.about_you_salary_10k_to_30k
    t: 10-30k
  - key: options.about_you_salary.about_you_salary_30k_to_50k
    t: 30-50k
  - key: options.about_you_salary.about_you_salary_50k_to_100k
    t: 50-100k
  - key: options.about_you_salary.about_you_salary_100k_to_200k
    t: 100-200k
  - key: options.about_you_salary.about_you_salary_200k_or_more
    t: 200+k

  - key: options.about_you_salary.about_you_salary_free.short
    t: free
  - key: options.about_you_salary.about_you_salary_0_to_10k.short
    t: 0-10k
  - key: options.about_you_salary.about_you_salary_10k_to_30k.short
    t: 10-30k
  - key: options.about_you_salary.about_you_salary_30k_to_50k.short
    t: 30-50k
  - key: options.about_you_salary.about_you_salary_50k_to_100k.short
    t: 50-100k
  - key: options.about_you_salary.about_you_salary_100k_to_200k.short
    t: 100-200k
  - key: options.about_you_salary.about_you_salary_200k_or_more.short
    t: 200+k

  - key: options.tools.developer_background_before.answer.a
    t: React developer
  - key: options.tools.developer_background_before.answer.b
    t: iOS developer
  - key: options.tools.developer_background_before.answer.c
    t: Android developer
  - key: options.tools.developer_background_before.answer.d
    t: Frontend developer (other than React e.g. Vue, Angular, SolidJS, Svelte, etc.)
  - key: options.tools.developer_background_before.answer.e
    t: Backend developer (PHP, Node.js, JVM, Python, etc.)
  - key: options.tools.developer_background_before.answer.f
    t: Desktop developer (e.g. macOS, Windows, Linux)
  - key: options.tools.developer_background_before.answer.g
    t: QA engineer
  - key: options.tools.developer_background_before.answer.h
    t: DevOps
  - key: options.tools.developer_background_before.answer.i
    t: Embedded developer
  - key: options.tools.developer_background_before.answer.j
    t: Non-technical role
  - key: options.tools.developer_background_before.answer.k
    t: Started with React Native
  - key: options.tools.developer_background_before_other
    t: Other background

  - key: options.tools_package_managers.tools_package_managers_npm
    t: npm
  - key: options.tools_package_managers.tools_package_managers_yarn
    t: yarn
  - key: options.tools_package_managers.tools_package_managers_yarn_berry
    t: yarn berry (yarn v2+)
  - key: options.tools_package_managers.tools_package_managers_pnpm
    t: pnpm

  - key: options.tools_starter_templates.tools_starter_templates_expo
    t: create-expo-app
  - key: options.tools_starter_templates.tools_starter_templates_react_native_cli
    t: react-native init
  - key: options.tools_starter_templates.tools_starter_templates_ignite_cli
    t: ignite-cli
  - key: options.tools_starter_templates.tools_starter_templates_create_t3_turbo
    t: create-t3-turbo

  - key: options.react_native_features_brownfield.react_native_features_brownfield_green
    t: I mainly work on standalone React Native apps (greenfield)
  - key: options.react_native_features_brownfield.react_native_features_brownfield_green.short
    t: Standalone apps (greenfield)
  - key: options.react_native_features_brownfield.react_native_features_brownfield_brown
    t: I mainly work on integrated React Native apps (brownfield)
  - key: options.react_native_features_brownfield.react_native_features_brownfield_brown.short
    t: Integrated apps (brownfield)
  - key: options.react_native_features_brownfield.react_native_features_brownfield_both
    t: I work on both standalone and brownfield apps
  - key: options.react_native_features_brownfield.react_native_features_brownfield_both.short
    t: Both

  - key: options.developer_background_contribution_to_lib.yes
    t: Yes
  - key: options.developer_background_contribution_to_lib.no
    t: No
  - key: options.developer_background_contribution_to_rn.yes
    t: Yes
  - key: options.developer_background_contribution_to_rn.no
    t: No

  - key: options.about_you_locale.en-US
    t: "English"
  - key: options.about_you_locale.fr-FR
    t: "French"
  - key: options.about_you_locale.pt-BR
    t: "Portuguese"
  - key: options.about_you_locale.es-ES
    t: "Spanish"
  - key: options.about_you_locale.pl-PL
    t: "Polish"
  - key: options.about_you_locale.tr-TR
    t: "Turkish"
  - key: options.about_you_locale.de-DE
    t: "German"
  - key: options.about_you_locale.ru-RU
    t: "Russian"
  - key: options.about_you_locale.ja
    t: "Japanese"
  - key: options.about_you_locale.uk-UA
    t: "Ukrainian"
  - key: options.about_you_locale.zh-CN
    t: "Chinese"

  - key: options.tools_js_ts.0
    t: "100% JS"
  - key: options.tools_js_ts.1
    t: "|"
  - key: options.tools_js_ts.2
    t: "|"
  - key: options.tools_js_ts.3
    t: "|"
  - key: options.tools_js_ts.4
    t: "50%/50%"
  - key: options.tools_js_ts.5
    t: "|"
  - key: options.tools_js_ts.6
    t: "|"
  - key: options.tools_js_ts.7
    t: "|"
  - key: options.tools_js_ts.8
    t: "100% TS"

  # newsletter
  - key: blocks.newsletter.title
    t: Stay Tuned
  - key: blocks.newsletter.description
    t: |
      If you'd like to know when we release additional results or announce next year's edition,
      just leave us your email below:
  - key: blocks.newsletter.email
    t: Your Email
  - key: blocks.newsletter.submit
    t: Notify Me

  # comments
  - key: picks.intro
    t: We asked members of the React Native community to share their opinions about the results


  - key: picks.william_candillon.bio
    t: Maker of the “Can it be done in React Native?” YouTube series
  - key: picks.william_candillon.description
    t: |
          When animations are delightful, users tend to be more lenient with everything else. 
          Call me biased, but Reanimated and Skia are my favorite libraries, and I suspect that deeper integration 
          between these two will be a common thread in 2023.

  - key: picks.lorenzo_sciandra.bio
    t: Senior Software Engineer at Microsoft, react-native core maintainer and releaser
  - key: picks.lorenzo_sciandra.description
    t: |
          Examining these data points, I find that they reflect well one key aspect of my vision for react-native: ubiquity. 
          By reducing the barriers to entry for native platform development, developers of various backgrounds and skill levels are able to 
          bring their ideas to fruition for customers across many industries. Additionally, there is a growing trend towards targeting 
          mobile and web platforms. At Microsoft, we are working to extend this trend to include desktop platforms through 
          our efforts with react-native-windows and react-native-macos. 
          It is our hope that in the near future, we will see an increase in the targeting of desktop platforms as well.

  - key: picks.colin_gray.bio
    t: Maker of the “Can it be done in React Native?” YouTube series
  - key: picks.colin_gray.description
    t: |
          We have seen many client-state libraries increasing in popularity in the last year: Zustand, Jotai, and Legend State all make 
          a strong showing in the Interest category, but are still relatively low in Usage. The pattern I am seeing here is that devs 
          want less boilerplate with their state management. A common criticism leveled at the ever-popular Redux library 
          (Usage is second only to the built-in hooks) is that diffs are large compared to the size of the change. redux-toolkit helps 
          a lot, but newer libraries go even further, often consolidating state and actions into one primitive, while still relying on 
          either familiar selectors (Zustand) or Proxy-based automatic observers (Legend State, Mobx, Valtio) to prevent unnecessary 
          re-renders. Meanwhile Recoil is still trying to find its legs, even after all these years. Jotai has a similar design to 
          Recoil but is fairing much better in retention, and slightly better in interest. I expected Legend State to do better in terms 
          of interest – but it’s a relative new-comer in this group. On the server-state side of things, TanStack Query and Apollo are 
          neck and neck in usage, but Apollo is falling in retention. This surprises me. I expected both to do well in retention. 
          Once you’ve learned useQuery (each library provides similar versions of this hook), you’re off to the races. 
          Apollo, though, has a steeper learning curve (compare the caching capabilities for an example). If I had to guess at why 
          TanStack Query is edging out Apollo in retention and interest, that would be my guess. This is consistent with the 
          relative popularity of the client-state libraries – simpler is indeed usually better!

  - key: picks.kacper_kapusciak.bio
    t: One of the devs at Software Mansion making State of React Native happen
  - key: picks.kacper_kapusciak.description
    t: |
          Besides well-known headaches with upgrades and debugging, the developers highlighted a huge reliance on community libraries, 
          many of which got abandoned over the years. Let’s be honest - creating (and maintaining) a library requiring expertise in 3+ 
          languages and having knowledge of both iOS and Android APIs isn’t easy. Also, due to never-ending changes in the platform 
          native modules need constant upkeep. New architecture won’t make it any easier as it is making bridge-based packages obsolete. 
          Seeing so many responses and passionate feedback it’s clear that people want React Native to succeed. In the near future, 
          I would love to see Expo Modules API helping greatly in the development of native modules.

  - key: picks.navigation_evan_bacon.bio
    t: Software Engineer at Expo, Author of Config Plugins and Expo Router
  - key: picks.navigation_evan_bacon.description
    t: |
          In 2022, building performant navigation in React Native has felt stable and reliable thanks to the availability of various solutions. Among them, [React Navigation](https://reactnavigation.org/) emerged as the dominant player, being used in over half of all React Native projects. 
          As React Native apps in the browser become more widespread, there is a growing need for better navigation, leading to the development of cross-framework solutions like [Moti](https://github.com/nandorojo/moti) and universal React Native solutions like the [File-based, Expo Router](https://expo.github.io/router). It would seem URL-based routing is becoming a staple in the community, with React Navigation serving as the underlying catalyst for high-quality user experience.
          In 2023, I predict that React Native frameworks will become more similar to web-only frameworks, leveraging opinionated navigation systems as the foundation that additional functionality like data fetching is built around. Potentially leading to increased adoption of native app development from the web community.
          Additionally, there are more baseline advancements in native navigation to look forward to, such as with Software Mansion's React Native Screens package and its [native shared element transitions proposal](https://github.com/software-mansion/react-native-screens/pull/1591).
          Overall, navigation in React Native is an exciting space that may eventually surpass the general capabilities of vanilla native navigation by combining the power of native primitives with the intuitive routing paradigms of the web.

  - key: picks.tools_evan_bacon.bio
    t: Software Engineer at Expo, Author of Config Plugins and Expo Router
  - key: picks.tools_evan_bacon.description
    t: |
          2022 was the most thrilling year for React Native developer tools to date. The Metro bundler team at Meta increased 
          in size and [outlined exciting plans](https://github.com/react-native-community/discussions-and-proposals/discussions/546#discussioncomment-4166119) 
          to enhance performance, speed, and reliability in React Native. Expo collaborated closely with the Metro team to 
          significantly improve the possibilities of bundling in React Native, resulting in 
          [Metro for web](https://docs.expo.dev/guides/customizing-metro/#web-support) and the first file-based routing solution for native apps, 
          [Expo Router](https://github.com/expo/router). The Microsoft team open sourced RNX Kit, which includes a suite of tools that they use 
          to improve the stability and correctness of their extensive React Native app collection. Established tools like 
          [Ignite CLI](https://github.com/infinitered/ignite) and `npx react-native` continue to improve in both reliability and developer experience. 
          Expo CLI underwent a ground-up rewrite to [the versioned `npx expo`](https://blog.expo.dev/the-new-expo-cli-f4250d8e3421) to provide better 
          CI compatibility, project longevity, and establish Prebuild as the long-term alternative to Ejecting. 
          The momentum of React Native dev tools is stronger than ever, and 2023 is expected to be even more exciting.
